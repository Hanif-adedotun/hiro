
=== File: prayers.tsx ===
"use client";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import Link from "next/link";
import PrayerTable from "./timingDesktop";
import { useMediaQuery } from "@/utils/use-media-query";
import { PrayersMobile } from "./timingMobile";

export default function Timing() {
  const isDesktop = useMediaQuery("(min-width: 768px)");
  return (
    <div
      className="bg-cover bg-repeat bg-left-top bg-[url('/bg-pattern-2.jpg')] py-20 my-12"
      style={{ backgroundSize: "300px 300px", backgroundRepeat: "repeat" }}
    >
      <div className="flex items-center justify-between ml-[10%] bg-transparent">
        <h1 className="text-3xl font-bold text-primary">Prayer Times</h1>
      </div>
      <Card className="mt-4 w-[85%] min-h-96 px-6 md:px-12 py-10 md:py-20 mx-auto shadow-sm rounded-lg grid grid-cols-1 gap-4 md:gap-0 md:grid-cols-2 bg-white shadow-sm">
        <CardContent className="flex flex-col justify-start gap-6 md:gap-12">
          <h1 className="text-2xl font-bold text-primary">Welcome to SEMRA</h1>
          <p>
            Suncity Estate Muslim Residents Association (SEMRA), started as a
            small gathering of few Muslim residents in Suncity Estate who
            normally spread their mats and observe daily prayers in a car
            parking lot donated by one of the brothers on Pomona Street. The
            small group has evolved to become a large community of Muslim
            residents in Suncity Estate and is subsequently transitioning to a
            top-notch Islamic Learning Centre in Abuja.{" "}
          </p>
          <Link href={"/about"}>
            <Button className="bg-semraYellow rounded-md text-white text-base hover:bg-semraYellow/90">
              Read More
            </Button>
          </Link>
        </CardContent>

        <CardContent className="flex flex-col justify-center gap-2 md:gap-4">
          <h1 className="text-2xl font-bold text-primary">
            {isDesktop ? "Prayer Times" : "Next Prayer"}
          </h1>
          {isDesktop ? <PrayerTable /> : <PrayersMobile />}
        </CardContent>
      </Card>
    </div>
  );
}


=== File: timingDesktop.tsx ===
import {
  Table,
  TableBody,
  TableCaption,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { prayers, renderTime } from "@/utils/prayerTypes";
import Image from "next/image";


export default function PrayerTable() {
  return (
    <Table>
      <TableCaption>
        *All prayer times are in West Africa Time (WAT)
      </TableCaption>
      <TableHeader>
        <TableRow className="border-0">
          <TableHead className="mx-auto text-center text-base font-medium">
            Name of Sallat
          </TableHead>
          <TableHead className="mx-auto text-center text-base font-medium">
            Adhan
          </TableHead>
          <TableHead className="mx-auto text-center text-base font-medium">
            Iqama
          </TableHead>
        </TableRow>
      </TableHeader>

      <TableBody className="border-0">
        {prayers.map((prayer) => (
          <TableRow key={prayer.name} className="border-0">
            <TableCell className="flex gap-2 my-2 md:gap-4 rounded-sm drop-shadow-sm bg-white w-36 px-4 py-2 mx-auto">
              <Image
                src={prayer.logo}
                alt={prayer.name}
                className="w-6 h-6"
                width={12}
                height={12}
              />
              <span className=" md:text-base text-sm text-left font-medium">
                {prayer.name}
              </span>
            </TableCell>
            <TableCell className="text-nowrap text-sm rounded-sm drop-shadow bg-white w-max text-center mx-auto">
              <p>{renderTime(prayer.adhan, prayer.meridian)}</p>
            </TableCell>
            <TableCell className="text-nowrap text-sm rounded-sm drop-shadow bg-white w-max text-center  mx-auto">
              {renderTime(prayer.iqhama, prayer.meridian)}
            </TableCell>
          </TableRow>
        ))}
      </TableBody>
    </Table>
  );
}


=== File: timingMobile.tsx ===
import * as React from "react";

import { Card, CardContent } from "@/components/ui/card";
import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
  type CarouselApi,
} from "@/components/ui/carousel";

import Image from "next/image";
import { prayers, renderTime, timeToMinutes, useNextPrayerIndex } from "@/utils/prayerTypes";

export function PrayersMobile() {
  const [api, setApi] = React.useState<CarouselApi>();
  const nextPrayerIndex = useNextPrayerIndex();

  React.useEffect(() => {
    if (!api) {
      return;
    }
    api.scrollTo(nextPrayerIndex);
  }, [api]);



  return (
    <Carousel
      opts={{
        align: "start",
      }}
      orientation="vertical"
      className="w-full max-w-xs mt-16"
      setApi={setApi}
    >
      <CarouselContent className="-mt-1 h-[200px]">
        {prayers.map((prayer, index) => (
          <CarouselItem key={index} className="pt-1 md:basis-1/2">
            <div className="p-1">
              <Card>
                <CardContent className="flex flex-col gap-2 items-center justify-center p-6">
                  <Image
                    src={prayer.logo}
                    alt={prayer.name}
                    className="w-9 h-9"
                    width={15}
                    height={15}
                  />
                  <span className="text-base  font-semibold">
                    {prayer.name}
                  </span>
                  <p className="font-light text-sm mt-2">
                    Adhan: {renderTime(prayer.adhan, prayer.meridian)}
                  </p>
                  <p className="font-light text-sm mt-1">
                    Iqama: {renderTime(prayer.iqhama, prayer.meridian)}
                  </p>
                </CardContent>
              </Card>
            </div>
          </CarouselItem>
        ))}
      </CarouselContent>
      <CarouselPrevious />
      <CarouselNext />
    </Carousel>
  );
}


=== File: donation.tsx ===
"use client";

import { Card, CardContent } from "@/components/ui/card";
import { Checkbox } from "@/components/ui/checkbox";
import Image from "next/image";
import { ToggleGroup, ToggleGroupItem } from "@/components/ui/toggle-group";
import {
  Form,
  FormControl,
  FormDescription,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { z } from "zod";
import { zodResolver } from "@hookform/resolvers/zod";
import { useForm } from "react-hook-form";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { Copy } from "lucide-react";
import { toast } from "sonner";

const defaultPrices = [
  { name: "N2,000", value: 2000 },
  { name: "N20,000", value: 20000 },
  { name: "N50,000", value: 50000 },
  { name: "N100,000", value: 100000 },
  { name: "N200,000", value: 200000 },
];

const formSchema = z.object({
  amount: z.number().int(),
  fullName: z.string().min(2).max(50),
  email: z.string().email(),
  phoneNumber: z.string().min(10).max(15),
  message: z.string().max(250),
  terms: z.boolean(),
});

export default function Donation() {
  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      amount: 0,
      fullName: "",
      email: "",
      phoneNumber: "",
      message: "",
      terms: false,
    },
  });

  function onSubmit(values: z.infer<typeof formSchema>) {
    // Do something with the form values.
    // âœ… This will be type-safe and validated.
    console.log(values);
  }

  const onCopy = (text:any) =>{
    navigator.clipboard.writeText(text);
    toast.success("Copied to clipboard");

  }
  return (
    <Card id="donate" className="mt-[80px] w-[85%] p-1 md:p-20 bg-fadedGreen min-h-96 mx-auto shadow-sm rounded-lg grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-0 justify-items-start">
      <CardContent className="flex flex-col text-white justify-start pt-8 gap-2 md:gap-4">
        <div className="w-full h-[300px] relative rounded-sm">
          <Image
            src="/pictures/donation.jpg"
            fill
            className="object-cover rounded-sm"
            alt=""
          />
        </div>
        <div className="text-base text-black mt-8">
          <section className="border border-dashed border-1 border-semraYellow w-full p-4 rounded-md flex flex-col gap-2">
            <div className="text-center ">TAJ Bank</div>
            <div className="text-center">
              SUNCITY ESTATE MUSLIM RESIDENTS ASSOCIATION
            </div>
            <div className="flex gap-2 items-center justify-center">
              Account Number:{" "}
              <span className="text-semraYellow">0002923259</span>
              <Copy
                size={14}
                color="#FD9822"
                onClick={() => onCopy("0002923259")}
                className="cursor-pointer hover:scale-125 transition duration-300 ease-in-out"
              />
            </div>
          </section>

          <section className="border border-dashed border-1 mt-4 border-semraYellow w-full p-4 rounded-md flex flex-col gap-2">
            <div className="flex gap-2 items-center justify-center ">
              Meter No: <span className="text-semraYellow">45976978273</span>{" "}
              <Copy
                size={14}
                color="#FD9822"
                onClick={() => onCopy("45976978273")}
                className="cursor-pointer hover:scale-125 transition duration-300 ease-in-out"
              />
            </div>
          </section>
        </div>
      </CardContent>

      <CardContent className="text-start w-full">
        <h1 className="text-3xl font-semibold text-black">
          Pledge Montly Donation
        </h1>
        <Form {...form}>
          <form onSubmit={form.handleSubmit(onSubmit)} className="mx-auto my-8">
            <ToggleGroup
              size={null}
              type="single"
              className="gap-4 justify-start flex-wrap lg:flex-nowrap"
            >
              {defaultPrices.map((price, index) => (
                <ToggleGroupItem
                  className="text-sm md:text-base data-[state=on]:bg-semraYellow/80 bg-semraYellow/10 hover:bg-semraYellow/30 text-semraYellow data-[state=on]:text-white hover:text-semraYellow"
                  key={index}
                  value={price.value.toString()}
                  onChange={(value) => form.setValue("amount", 43)}
                >
                  {price.name}
                </ToggleGroupItem>
              ))}
            </ToggleGroup>

            <FormField
              control={form.control}
              name="amount"
              render={({ field }) => (
                <FormItem className="flex gap-2 justify-center items-center my-8 text-base">
                  <FormLabel className="w-max text-nowrap">
                    Your pledge <span className="text-bold">â‚¦</span>
                  </FormLabel>
                  <FormControl>
                    <Input
                      placeholder="Enter custom amount"
                      type="number"
                      {...field}
                      className="placeholder:opacity-10 rounded-[10px] outline:none border-0 bg-black/5"
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />

            {/* FullName */}
            <FormField
              control={form.control}
              name="fullName"
              render={({ field }) => (
                <FormItem className="my-8">
                  <FormLabel className="w-max text-small font-medium">
                    Full Name
                  </FormLabel>
                  <FormControl>
                    <Input
                      placeholder="Your full name"
                      {...field}
                      className="placeholder:opacity-10 rounded-[10px] outline:none border-0 bg-black/5"
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />

            {/* EMail and phone */}

            <div className="grid grid-cols-2 gap-4 my-8">
              <FormField
                control={form.control}
                name="email"
                render={({ field }) => (
                  <FormItem className="">
                    <FormLabel className="w-max text-small font-medium">
                      Email Address
                    </FormLabel>
                    <FormControl>
                      <Input
                        placeholder="Your full name"
                        type="email"
                        {...field}
                        className="placeholder:opacity-10 rounded-[10px] outline:none border-0 bg-black/5"
                      />
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="phoneNumber"
                render={({ field }) => (
                  <FormItem className="">
                    <FormLabel className="w-max text-small font-medium">
                      Phone Number
                    </FormLabel>
                    <FormControl>
                      <Input
                        placeholder="0902 343 2445"
                        type="number"
                        {...field}
                        className="placeholder:opacity-10 rounded-[10px] outline:none border-0 bg-black/5"
                      />
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />
            </div>

            {/* Message */}
            <FormField
              control={form.control}
              name="message"
              render={({ field }) => (
                <FormItem className="block">
                  <FormLabel>Message</FormLabel>
                  <FormControl>
                    <Textarea
                      placeholder="Do you have any extra information to share?"
                      className="placeholder:opacity-10 rounded-[10px] resize-none outline:none border-0 bg-black/5"
                      {...field}
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />

            {/* Terms */}
            <FormField
              control={form.control}
              name="terms"
              render={({ field }) => (
                <FormItem className="block flex flex-row items-start space-x-3 space-y-0 rounded-md w-full p-2 my-8">
                  <FormControl>
                    <Checkbox
                      checked={field.value}
                      onCheckedChange={field.onChange}
                    />
                  </FormControl>
                  <div className="space-y-1 leading-none">
                    <FormLabel>
                      You agree to receive monthly reminders for your pledged
                      payment
                    </FormLabel>
                  </div>
                </FormItem>
              )}
            />

            <Button
              type="submit"
              className="bg-semraYellow rounded-[10px] mx-auto text-white w-full h-12"
            >
              Submit
            </Button>
          </form>
        </Form>
      </CardContent>
    </Card>
  );
}


=== File: footer.tsx ===
import { Facebook, Instagram, Youtube } from "lucide-react";
import Image from "next/image";
import Link from "next/link";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";

export function Footer() {
  return (
    <div className="bg-black z-10 grid grid-cols-1 md:grid-cols-4 w-full min-h-96 mt-48 items-start  gap-10 md:gap-16 p-10 md:p-24 text-sm">
      {/* Section 1 */}
      <div className="flex flex-col gap-4">
        <div className="flex gap-4 justify-start items-center">
          <Image
            src="/semra-logo.jpg"
            width={120}
            height={50}
            alt="logo"
            className="rounded-md"
          />
        </div>

        <p className="text-white">
          To be a renowned Centre for Islamic excellence and broad teaching in
          Nigeria and beyond.
        </p>

        <div className="flex gap-4">
          <Facebook size={20} color="#FD9822" />
          <Instagram size={20} color="#FD9822" />
          <Youtube size={20} color="#FD9822" />
        </div>
      </div>
      {/* Section 2 */}
      <div>
        <h1 className="text-white text-base font-bold pb-4">Useful Links</h1>
        <Link href={"/about"}>
          <p className="text-white">About Us</p>
        </Link>
        <Link href={"/#donate"}>
          <p className="text-white">Donate</p>
        </Link>
        <Link href={"/events"}>
          <p className="text-white">Events</p>
        </Link>
        <Link href={"/contact"}>
          <p className="text-white">Contact</p>
        </Link>
      </div>

      {/* Section 3 */}
      <div>
        <h1 className="text-white text-base  font-bold pb-4">Contact Us</h1>
        <p className="text-white">Email: semra.suncity@gmail.com</p>
        <p className="text-white">
          Phone: <a href="tel:+2348078785032">+234-807-878-5032</a>
        </p>
        <p className="text-white">
          Address: No. 2, Niger Crescent, off Main street, Suncity Estate, Abuja
        </p>
      </div>

      {/* Section 4 */}
      <div>
        <h1 className="text-white text-base  font-bold pb-4">
          Sign up for our news
        </h1>
        <div className="flex w-full max-w-sm items-center space-x-2">
          <Input type="email" placeholder="Email" className="bg-white" />
          <Button type="submit" className="bg-semraYellow text-white">
            Subscribe
          </Button>
        </div>
      </div>
    </div>
  );
}


=== File: header.tsx ===
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import Image from "next/image";
import Link from "next/link";

export default function Header() {
  return (
    <Card className="w-[85%] bg-semraGreen min-h-96 mx-auto shadow-sm rounded-lg flex flex-col-reverse justify-between gap-2 md:flex-row">
      <CardContent className="flex flex-col justify-center gap-2 md:gap-4">
        <h1 className="text-[30px] md:text-[60px] text-center md:text-left font-bold text-white">
          Assalamu Alaykum Wa Rahmattullahi Wa Baraka&apos;atuh
        </h1>
        <Link href={"/about"}>
          <Button className="bg-semraYellow rounded-md text-white w-full md:w-1/2 mt-8 text-base py-6 px-8 hover:bg-semraYellow/90">
            Join our WhatsApp Community
          </Button>
        </Link>
      </CardContent>
      <CardContent className="w-full md:w-2/3 h-[250px] md:h-[500px]  md:mr-[50px] relative">
        <Image
          src="/icons/praying.svg"
          className="object-contain rounded-lg "
          fill
          alt="Praying Muslims"
        />
      </CardContent>
    </Card>
  );
}


=== File: landing.tsx ===
"use client";

import Header from "./header";
import Timing from "./(prayers)/prayers";
import Media from "./media";
import Services from "./services";
import Donation from "./donation";

export default function LandingPage() {
  return (
    <main className="w-screen  overflow-hidden">
      <Header />
      <Timing />
      <Media />
      <Donation />
      <Services />
    </main>
  );
}


=== File: media.tsx ===
import * as React from "react";
import Autoplay from "embla-carousel-autoplay";

import { Card, CardContent } from "@/components/ui/card";
import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
} from "@/components/ui/carousel";
import Image from "next/image";
import { CircleCheckBig } from "lucide-react";

const images = [
  "https://uxat7lu2fpipwkob.public.blob.vercel-storage.com/mosque-media/mosque1-VYlPeQhdZNiJ2VudEJhddOGVVjoIe5.jpeg",
  "https://uxat7lu2fpipwkob.public.blob.vercel-storage.com/mosque-media/mosque2-xOKKbrhZcK4NGB7nti2QvVqD8VoEZ1.jpeg",
  "https://uxat7lu2fpipwkob.public.blob.vercel-storage.com/mosque-media/mosque3-JEvnMnEyNh9orzyxcOAzgIEeIZLVOv.jpeg",
];
export default function Media() {
  const plugin = React.useRef(
    Autoplay({ delay: 2000, stopOnInteraction: false })
  );

  return (
    <Card className="bg-[#E6F8EF] min-h-96 w-[85%] mx-auto mt-[272px] relative flex justify-between">
      <Carousel
        plugins={[plugin.current]}
        className="w-full md:w-1/2 h-96 absolute left-0 md:left-12 -top-48 rounded-md"
        onMouseEnter={plugin.current.stop}
        onMouseLeave={plugin.current.reset}
        opts={{ loop: true }}
      >
        <CarouselContent>
          {images.map((image, index) => (
            <CarouselItem key={index}>
              <Card>
                <CardContent className="w-full h-96 relative rounded-md">
                  <Image
                    src={image}
                    className="object-cover w-full h-full rounded-md"
                    alt={"Image " + index}
                    fill
                  />
                </CardContent>
              </Card>
            </CarouselItem>
          ))}
        </CarouselContent>
        {/* <CarouselPrevious />
        <CarouselNext /> */}
      </Carousel>
      <div className="basis-0 md:basis-2/3"></div>{" "}
      {/*//TODO: DO not remove this*/}
      <CardContent className="flex flex-col justify-center gap-2 md:gap-4 mt-[240px] md:mt-0">
        <h3 className="font-semibold text-3xl">
          Our state of the art Islamic Center
        </h3>
        <ul className="text-base">
          <li className="flex gap-2 my-4 items-center font-medium">
            <CircleCheckBig size={24} color="#FD9822" /> Serene environment
          </li>
          <li className="flex gap-2 my-4 items-center font-medium">
            <CircleCheckBig size={24} color="#FD9822" /> Secure premises
          </li>
          <li className="flex gap-2 my-4 items-center font-medium">
            <CircleCheckBig size={24} color="#FD9822" /> 24/7 security
          </li>
        </ul>
      </CardContent>
    </Card>
  );
}

{
  /* <div className="p-1">
  <Card>
    <CardContent className="flex aspect-square items-center justify-center p-6">
      <span className="text-4xl font-semibold">{index + 1}</span>
    </CardContent>
  </Card>
</div>;  */
}


=== File: services.tsx ===
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import Image from "next/image";
import Link from "next/link";

const services = [
  {
    logo: "/quran.svg",
    title: "Quran Learning",
    description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  },
  {
    logo: "/sadaqa.svg",
    title: "Quran Learning",
    description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  },
  {
    logo: "/dua.svg",
    title: "Quran Learning",
    description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  },
  {
    logo: "/Allah.svg",
    title: "Quran Learning",
    description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  },
];
export default function Services() {
  return (
    <Card className="mt-[80px] w-[85%] p-1 md:p-20 bg-semraGreen min-h-96 mx-auto shadow-sm rounded-lg grid grid-cols-1 gap-4 md:gap-0 justify-items-start md:grid-cols-2">
      <CardContent className="flex flex-col text-white justify-start pt-8 gap-2 md:gap-4">
        <h1 className="text-2xl font-bold text-primary">Our Services</h1>
        <p className="text-base">
          Suncity Estate Muslim Resident Association (SEMRA).Lorem ipsum dolor
          sit amet, consectetur adipiscing elit, sed do eiusmod tempor
          incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
          quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
          commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
          velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint
          occaecat cupidatat non proident, sunt in culpa qui officia deserunt
          mollit anim id est laborum.{" "}
        </p>
        <Link href={"/about"}>
          <Button className="bg-semraYellow rounded-md text-white w-64 h-12">
            Read More
          </Button>
        </Link>
      </CardContent>

      <CardContent className="grid md:grid-cols-2 md:grid-row-2 ">
        {services.map((service, index) => (
          <div
            key={index}
            className={`hover:bg-white text-white hover:text-black rounded-md gap-2 p-6 md:p-8 cursor-pointer`}
          >
            <Image
              src={service.logo}
              alt={service.title}
              width={50}
              height={50}
            />
            <h1 className="text-xl font-bold text-primary">{service.title}</h1>
            <p>{service.description}</p>
          </div>
        ))}
      </CardContent>
    </Card>
  );
}


=== File: mobileNav.tsx ===
"use client";
import {
  NavigationMenu,
  NavigationMenuContent,
  NavigationMenuIndicator,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
  NavigationMenuTrigger,
  NavigationMenuViewport,
} from "@/components/ui/navigation-menu";
import React from "react";
import { cn } from "@/lib/utils";
import { useRouter } from "next/navigation";

import { Button } from "@/components/ui/button";
import { AlignJustify } from "lucide-react";

export function MobileNav() {
  const router = useRouter();
  return (
    <NavigationMenuItem className="">
      <NavigationMenuTrigger>
        <div className="flex gap-2 items-center">
          <AlignJustify size={28} />
        </div>
        {/* Menu */}
      </NavigationMenuTrigger>

      <NavigationMenuContent className="bg-white relative w-screen">
        <ul className="grid grid-cols-1 gap-3 p-4">
          <ListItem key={"Home"} title={"Home"} href={"/"}>
            {""}
          </ListItem>

          <ListItem key={"About"} title={"About"} href={"/about"}>
            {""}
          </ListItem>

          <ListItem key={"Events"} title={"Events"} href={"/events"}>
            {""}
          </ListItem>

          <ListItem key={"Academy"} title={"Islamic Academy"} href={"/academy"}>
            {""}
          </ListItem>

          <ListItem key={"Articles"} title={"Articles"} href={"/articles"}>
            {""}
          </ListItem>

          <ListItem key={"contact"} title={"Contact us"} href={"/contact"}>
            {""}
          </ListItem>

          <ListItem key={"contact"}>
            <Button
              onClick={() => router.push("/#donate")}
              className="bg-semraYellow w-full rounded-md text-sm text-white hover:bg-semraYellow/80"
            >
              Donate Now
            </Button>
          </ListItem>
        </ul>
      </NavigationMenuContent>
    </NavigationMenuItem>
  );
}

const ListItem = React.forwardRef<
  React.ElementRef<"a">,
  React.ComponentPropsWithoutRef<"a">
>(({ className, title, children, ...props }, ref) => {
  return (
    <li>
      <NavigationMenuLink asChild>
        <a
          ref={ref}
          className={cn(
            "block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground",
            className
          )}
          {...props}
        >
          <div className="text-sm font-medium text-center leading-none">{title}</div>
          <p className="line-clamp-2 text-sm leading-snug text-muted-foreground">
            {children}
          </p>
        </a>
      </NavigationMenuLink>
    </li>
  );
});
ListItem.displayName = "ListItem";


=== File: nav.tsx ===
"use client";

import { Button } from "@/components/ui/button";
import {
  NavigationMenu,
  NavigationMenuContent,
  NavigationMenuIndicator,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
  NavigationMenuTrigger,
  NavigationMenuViewport,
} from "@/components/ui/navigation-menu";
import { navigationMenuTriggerStyle } from "@/components/ui/navigation-menu";
import {
  Facebook,
  Instagram,
  Locate,
  Mail,
  MapPin,
  Phone,
  Twitter,
} from "lucide-react";
import Image from "next/image";
import Link from "next/link";
import { usePathname, useRouter } from "next/navigation";

// Icons
import { siFacebook } from "simple-icons";
import { MobileNav } from "./mobileNav";

export default function Nav() {
  const pathname = usePathname();
  const router = useRouter();
  return (
    <>
      <div className=" hidden md:flex fixed inset-x-0 top-0 z-50 bg-black px-4 h-[40px] items-center w-screen  justify-between px-[10%]">
        <div className="flex justify-center items-end gap-2 md:gap-6">
          {/* <Image
            src="/icons/palestine.avif"
            width={30}
            height={30}
            alt="Palastine flag"
          />
          <p className="text-[12px] text-white">May Allah protect Palestine</p> */}
        </div>
        <div className="flex justify-center gap-2 md:gap-8">
          <span className="text-[12px] text-white flex gap-1 items-center md:gap-4">
            <Phone fill="white" color="black" size={"14px"} />{" "}
            <a href="tel:+2348078785032">+234-807-878-5032</a>
          </span>

          <span className="text-[12px] text-white flex gap-1 items-center md:gap-2">
            <Mail fill="white" color="black" size={"14px"} />{" "}
            <a className="" href="mailto:semra@gmail.com">
              semra.suncity@gmail.com
            </a>
          </span>

          <span className="text-[12px] text-white flex gap-1 items-center md:gap-2">
            <MapPin fill="white" color="black" size={"14px"} />{" "}
            <a className="" href="mailto:semra@gmail.com">
              No. 2, Niger Crescent, off Main street, Suncity Estate, Abuja
            </a>
          </span>
        </div>

        <div className="flex justify-center gap-1 md:gap-2">
          <span className="text-[12px] text-white">
            <Facebook fill="white" size={"16px"} />
          </span>
          <span className="text-[12px] text-white">
            <Instagram fill="white" color="black" size={"16px"} />
          </span>
          <span className="text-[12px] text-white">
            <Twitter fill="white" size={"16px"} />
          </span>
        </div>
      </div>
      <NavigationMenu className="fixed inset-x-0 top-0 md:top-[40px] z-50 bg-white w-screen">
        <NavigationMenuList className="flex justify-between h-14 p-4 items-center w-screen">
          <Link href="/" className="flex items-center" prefetch={false}>
            <div className="flex gap-4 justify-start items-center">
              <Image src="/semra-logo.jpg" width={120} height={50} alt="logo" />
            </div>
            <span className="sr-only">Semra home</span>
          </Link>

          <div className="hidden md:flex gap-4">
            <NavigationMenuItem>
              <Link href="/about" legacyBehavior passHref>
                <NavigationMenuLink
                  className={`${navigationMenuTriggerStyle()} ${
                    pathname == "/about" && "text-semraGreen"
                  }`}
                >
                  About
                </NavigationMenuLink>
              </Link>
            </NavigationMenuItem>

            <NavigationMenuItem>
              <Link href="/events" legacyBehavior passHref>
                <NavigationMenuLink
                  className={`${navigationMenuTriggerStyle()} ${
                    pathname == "/events" && "text-semraGreen"
                  }`}
                >
                  Events
                </NavigationMenuLink>
              </Link>
            </NavigationMenuItem>

            <NavigationMenuItem>
              <Link href="/academy" legacyBehavior passHref>
                <NavigationMenuLink
                  className={`${navigationMenuTriggerStyle()} ${
                    pathname == "/academy" && "text-semraGreen"
                  }`}
                >
                  Islamic Academy
                </NavigationMenuLink>
              </Link>
            </NavigationMenuItem>

            <NavigationMenuItem>
              <Link href="/articles" legacyBehavior passHref>
                <NavigationMenuLink
                  className={`${navigationMenuTriggerStyle()} ${
                    pathname == "/articles" && "text-semraGreen"
                  }`}
                >
                  Articles
                </NavigationMenuLink>
              </Link>
            </NavigationMenuItem>

            <NavigationMenuItem>
              <Link href="/contact" legacyBehavior passHref>
                <NavigationMenuLink
                  className={`${navigationMenuTriggerStyle()} ${
                    pathname == "/contact" && "text-semraGreen"
                  } text-base`}
                >
                  Contact us
                </NavigationMenuLink>
              </Link>
            </NavigationMenuItem>
          </div>

          <div className="flex md:hidden gap-4">
            <MobileNav />
          </div>

          <div className="hidden md:flex">
            <Button
              onClick={() => router.push("/#donate")}
              className="bg-semraYellow rounded-md text-sm text-white hover:bg-semraYellow/80"
            >
              Donate Now
            </Button>
          </div>
        </NavigationMenuList>
      </NavigationMenu>
    </>
  );
}


=== File: page.tsx ===
import { Metadata } from "next";
import Image from "next/image";
import Timeline from "./timeline";
import { readMore } from "@/lib/static";

import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import { ChevronDown } from "lucide-react";
import { Button } from "@/components/ui/button";

export const metadata: Metadata = {
  title: "About us",
};

const coreValues = [
  ["I", "Integrity"],
  ["S", "Solidarity"],
  ["L", "Love"],
  ["A", "Accountability"],
  ["M", "Mastery"],
];

export default function AboutUs() {
  const timelineItems = [
    {
      year: "2019 - 2020",
      content: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
    },
    {
      year: "2021 - 2023",
      content: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
    },
    {
      year: "2021 - 2023",
      content: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
    },
    {
      year: "2021 - 2023",
      content: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
    },

    {
      year: "2021 - 2023",
      content: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
    },
    // Add more items as needed
  ];
  return (
    <div className="w-screen min-h-max flex flex-col items-center justify-center gap-20 py-12 px-[7.5%] md:px-[15%]">
      <h2 className="font-semibold text-3xl text-center text-black mt-12">
        About Us
      </h2>

      <p className="text-center text-base">
        Suncity Estate Muslim Residents Association (SEMRA), started as a small
        gathering of few Muslim residents in Suncity Estate who normally spread
        their mats and observe daily prayers in a car parking lot donated by one
        of the brothers on Pomona Street. The small group has evolved to become
        a large community of Muslim residents in Suncity Estate and is
        subsequently transitioning to a top-notch Islamic Learning Centre in
        Abuja.
        <Accordion type="single" collapsible>
          <AccordionItem value="item-1">
            <AccordionTrigger className="m-auto my-3">
              <Button
                variant={"outline"}
                className="m-auto text-center text-base font-semibold w-2/5 border-none"
              >
                Read More
                <ChevronDown className=" ml-4 h-4 w-4 shrink-0 transition-transform duration-200 [&[data-state=open]>svg]:rotate-180" />
              </Button>
            </AccordionTrigger>
            <AccordionContent>
              {readMore.map((read, i) => (
                <p key={i} className="text-base text-left mb-2">
                  {read}
                </p>
              ))}
            </AccordionContent>
          </AccordionItem>
        </Accordion>
      </p>

      <div className="w-[100%] h-96 md:h-[500px] relative">
        <Image
          className="object-cover rounded-md md:rounded-lg"
          fill
          src="https://uxat7lu2fpipwkob.public.blob.vercel-storage.com/mosque-media/mosque2-xOKKbrhZcK4NGB7nti2QvVqD8VoEZ1.jpeg"
          alt="Suncity Mosque"
        />
      </div>

      <section>
        <h2 className="font-semibold text-center text-xl mb-12">
          Aims and Objectives
        </h2>
        <div>
          {" "}
          To seek the pleasure of Almighty Allah and be rewarded with Al-Janaâ€™ah
          Firdaus. To bridge the knowledge gap in the understanding of authentic
          Islamic teachings. To extend humanitarian support to those in need. To
          inspire the Ummah towards the culture of love for the Beloved
          Messenger of Allah (PBUH). To spread the message of love, peace and
          harmony among all the classes of human society.
        </div>
      </section>

      <section>
        {/* Add image here */}
        <h2 className="font-semibold text-center text-xl mb-12">Core Values</h2>
        <section className="flex flex-col gap-6 md:gap-12 md:flex-row">
          <Image src="/ramadan-podium.png" width={300} height={50} alt="" />

          <div className="flex flex-col">
            {coreValues.map((value, i) => (
              <div className="grid grid-cols-2 gap-1 items-center" key={i}>
                <span className="text-3xl">{value[0]}</span>{" "}
                <span className="text-md text-left">{value[1]}</span>
              </div>
            ))}
          </div>
        </section>
      </section>

      <section>
        <h2 className="font-semibold text-center text-xl mb-12">
          Mision & vision
        </h2>
        <div>
          <h3 className="font-semibold text-left text-md mb-4">Our Mision</h3>{" "}
          To provide the platform for making better Muslims in our community and
          beyond
        </div>
        <div>
          <h3 className="font-semibold text-left text-md mb-4 mt-4">
            {" "}
            Our vision{" "}
          </h3>
          To be a renowned Centre for Islamic excellence and broad teaching in
          Nigeria and beyond
        </div>
      </section>

      <div className="mx-4 text-wrap">
        <h2 className="font-semibold text-center text-xl mb-12">
          Timeline of the formation of semra
        </h2>
        <Timeline items={timelineItems} />
      </div>
    </div>
  );
}


=== File: timeline.module.css ===
.timeline {
  position: relative;
  max-width: 800px;
  margin: 0 auto;
}

.timelineItem {
  padding: 20px 0;
  opacity: 0;
  transform: translateY(50px);
  transition: opacity 1.1s, transform 1.1s;
}

.timelineItem.animate {
  opacity: 1;
  transform: translateY(0);
}

.timelineLine {
  position: absolute;
  left: 50%;
  top: 0;
  bottom: 0;
  width: 2px;
  background-color: #ccc;
  transform: scaleY(0);
  transform-origin: top;
  transition: transform 0.7s;
}

.timelineIcon{
     position: absolute;
     left: calc(50% - 4px);
     top: calc(50% - 4px);
     bottom: 0;
     transform: translateY(50px);;
     width: 10px;
     height: 10px;
     background-color: #4caf50;
     border-radius: 50%;
     transition: transform 0.9s;
}
.timelineItem.animate .timelineLine {
  transform: scaleY(1);
  background-color: #4caf50;
}

.timelineContent {
  position: relative;
  width: 45%;
  padding: 10px;
  /* background-color: #f9f9f9; */
  border-radius: 5px;
}

.timelineItem:nth-child(odd) .timelineContent {
  left: 55%;
}

=== File: timeline.tsx ===
"use client"
import React, { useEffect, useRef } from "react";
import styles from "./timeline.module.css";

interface TimelineItem {
  year: string;
  content: string;
}

interface TimelineProps {
  items: TimelineItem[];
}

const Timeline: React.FC<TimelineProps> = ({ items }) => {
  const timelineRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add(styles.animate);
          }
        });
      },
      { threshold: 0.5 }
    );

    const timelineItems = timelineRef.current?.querySelectorAll(
      `.${styles.timelineItem}`
    );
    timelineItems?.forEach((item) => observer.observe(item));

    return () => observer.disconnect();
  }, []);

  return (
    <div className={styles.timeline} ref={timelineRef}>
      {items.map((item, index) => (
        <div key={index} className={styles.timelineItem}>
          <div className={styles.timelineLine}></div>
          <div className={styles.timelineIcon}></div>
          <div className={styles.timelineContent}>
            <h3 className="font-bold">{item.year}</h3>
            <p className="text-base">{item.content}</p>
          </div>
        </div>
      ))}
    </div>
  );
};

export default Timeline;


=== File: page.tsx ===

import Image from "next/image";

export default function IslamicAcademy() {
  return (
    <div className="w-screen min-h-max flex flex-col items-center justify-center gap-20 py-12 px-[7.5%] md:px-[15%]">
      <h2 className="font-semibold text-3xl text-center text-black mt-12">
        SEMRA Islamic Academy
      </h2>

      <section>
        <h2 className="font-semibold text-center text-xl mb-12">
          Mision & vision
        </h2>
        <div>
          <h3 className="font-semibold text-left text-md mb-4">Our Mision</h3>{" "}
          To impact academic and moral knowledge of Islam to the children with
          the Quran, Hadith and other relevant Islamic literatures. Islamiyyah
          was restructured in January 2016 when classes were created, syllabus
          developed, structures were put in place and new set of staff were
          recruited to run the Islamiyyah. Our priority remains impacting in our
          pupilsâ€™ Islamic knowledge and morals which can only be achieved by the
          cooperation of the parents/guardians and the authorities at the
          Islamiyyah. Thank you for trusting us with your wards.
        </div>
        <div>
          <h3 className="font-semibold text-left text-md mb-4 mt-4">
            {" "}
            Our vision{" "}
          </h3>
          To build and maintain an Islamic learning center that produces future
          leaders through the Islamic faith, knowledge, and inspiration.
        </div>
      </section>

      <div className="w-[100%] h-96 md:h-[500px] relative">
        <Image
          className="object-cover rounded-md md:rounded-lg"
          fill
          src="https://uxat7lu2fpipwkob.public.blob.vercel-storage.com/mosque-media/mosque2-xOKKbrhZcK4NGB7nti2QvVqD8VoEZ1.jpeg"
          alt="Suncity Mosque"
        />
      </div>
    </div>
  );
}


=== File: article-content.tsx ===
"use client";

import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { type Article } from "@/lib/articles";
import { formatDistanceToNow } from "date-fns";
import { BookOpen, Share2 } from "lucide-react";
import Image from "next/image";
import { useEffect, useState } from "react";

export default function ArticleContent({ article }: { article: Article }) {
  const [comment, setComment] = useState("");
  const [name, setName] = useState("");
    const [isClient, setIsClient] = useState(false); // Track if we are in the client

    useEffect(() => {
      setIsClient(true); // Set to true when the component mounts
    }, []);

  const handleShare = async () => {
    if (isClient && navigator.share) {
      try {
        await navigator.share({
          title: article.title,
          text: article.excerpt,
          url: window.location.href,
        });
      } catch (error) {
        console.error("Error sharing:", error);
      }
    }
  };

  return (
    <div className="min-h-screen bg-background">
      <article className="container mx-auto px-4 py-8 max-w-4xl">
        <div className="relative h-[400px] rounded-lg overflow-hidden mb-8">
          <Image
            src={article.coverImage}
            alt={article.title}
            fill
            className="object-cover"
          />
        </div>

        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center gap-4">
            <Image
              src={article.author.avatar}
              alt={article.author.name}
              width={48}
              height={48}
              className="rounded-full"
            />
            <div>
              <h3 className="font-medium">{article.author.name}</h3>
              <div className="flex items-center gap-2 text-sm text-muted-foreground">
                <time>
                  {formatDistanceToNow(new Date(article.publishedAt), {
                    addSuffix: true,
                  })}
                </time>
                <span>â€¢</span>
                <div className="flex items-center gap-1">
                  <BookOpen className="w-4 h-4" />
                  <span>{article.readingTime}</span>
                </div>
              </div>
            </div>
          </div>

          <Dialog>
            <DialogTrigger asChild>
              <Button variant="outline" size="icon">
                <Share2 className="w-4 h-4" />
              </Button>
            </DialogTrigger>
            <DialogContent>
              <DialogHeader>
                <DialogTitle>Share Article</DialogTitle>
                <DialogDescription>
                  Share this article with your friends and family
                </DialogDescription>
              </DialogHeader>
              <div className="flex flex-col gap-4">
                <Button onClick={handleShare} className="w-full">
                  Share via Device
                </Button>
                <Input
                  readOnly
                  value={isClient ? window.location.href : ""}
                  onClick={(e) => e.currentTarget.select()}
                />
              </div>
            </DialogContent>
          </Dialog>
        </div>

        <h1 className="text-4xl font-bold tracking-tight mb-6">
          {article.title}
        </h1>
        <div className="prose prose-lg max-w-none">
          {article.content.split("\n\n").map((paragraph, index) => (
            <p key={index} className="mb-4">
              {paragraph}
            </p>
          ))}
        </div>

        <div className="flex gap-2 mt-6">
          {article.tags.map((tag) => (
            <span
              key={tag}
              className="inline-flex items-center rounded-full bg-secondary px-3 py-1 text-sm"
            >
              {tag}
            </span>
          ))}
        </div>

        <hr className="my-12" />

        <section className="mt-12">
          <h2 className="text-2xl font-semibold mb-6">Comments</h2>
          <Card className="p-6">
            <form className="space-y-4">
              <div>
                <Input
                  placeholder="Your name"
                  value={name}
                  onChange={(e) => setName(e.target.value)}
                />
              </div>
              <div>
                <Textarea
                  placeholder="Share your thoughts..."
                  value={comment}
                  onChange={(e) => setComment(e.target.value)}
                  rows={4}
                />
              </div>
              <Button type="submit">Post Comment</Button>
            </form>
          </Card>
        </section>
      </article>
    </div>
  );
}


=== File: page.tsx ===
import { articles } from "@/lib/articles";
import ArticleContent from "./article-content";

export const generateStaticParams = () => {
  return articles.map((article) => ({
    id: article.id,
  }));
};

export default function ArticlePage({ params }: { params: { id: string } }) {
  const article = articles.find((a) => a.id === params.id);

  if (!article) {
    return <div>Article not found</div>;
  }

  return <ArticleContent article={article} />;
}


=== File: categories.tsx ===
import { categories } from "@/lib/categories";
import { BookOpen, BookText } from "lucide-react";

import { Card } from "@/components/ui/card";
import Link from "next/link";
export default function Categories() {
  return (
    <>
      {/* Categories sidebar */}
      <div className="sticky top-[10%] w-72 shrink-0 ">
          <Card className="p-6">
            <div className="flex items-center gap-2 mb-6">
              <BookText className="w-5 h-5" />
              <h2 className="text-xl font-semibold">Categories</h2>
            </div>
            <div className="space-y-2">
              {categories.map((category) => (
                <Link
                  key={category.name}
                  href={`/categories/${category.name
                    .toLowerCase()
                    .replace(/\s+/g, "-")}`}
                  className="flex items-center justify-between p-3 rounded-lg hover:bg-secondary transition-colors"
                >
                  <span className="flex items-center gap-2">
                    <span>{category.icon}</span>
                    <span>{category.name}</span>
                  </span>
                  <span className="text-sm text-muted-foreground">
                    {category.count}
                  </span>
                </Link>
              ))}
            </div>
          </Card>
      </div>
    </>
  );
}


=== File: page.tsx ===

import { Card } from "@/components/ui/card";
import { articles } from "@/lib/articles";

import { formatDistanceToNow } from "date-fns";
import { BookOpen, BookText } from "lucide-react";
import Image from "next/image";
import Link from "next/link";
import Categories from "./_components/categories";

export default function Articles(){
     return (
       <div className="relative w-screen min-h-max flex flex-col items-center justify-center gap-20 py-12 px-[7.5%]">
         <div className="container mx-auto px-4 py-8 ">
           <header className="mb-12 text-center">
             <h2 className="font-semibold text-3xl text-center text-black mt-12">
               Islamic Articles
             </h2>
             <p className="text-muted-foreground text-lg max-w-2xl mx-auto">
               Explore insightful articles about Islam, faith, and spirituality
             </p>
           </header>

           <section className="flex items-start justify-between gap-6">
             <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-6">
               {articles.map((article) => (
                 <Link key={article.id} href={`/articles/${article.id}`}>
                   <Card className="h-full overflow-hidden hover:shadow-lg transition-shadow duration-300">
                     <div className="relative h-48">
                       <Image
                         src={article.coverImage}
                         alt={article.title}
                         fill
                         className="object-cover"
                       />
                     </div>
                     <div className="p-6">
                       <div className="flex items-center gap-2 mb-4">
                         <span className="inline-flex items-center rounded-full bg-primary/10 px-3 py-1 text-sm font-medium text-primary">
                           {article.category}
                         </span>
                         <span className="text-sm text-muted-foreground">
                           {formatDistanceToNow(new Date(article.publishedAt), {
                             addSuffix: true,
                           })}
                         </span>
                       </div>
                       <h2 className="text-xl font-semibold mb-2 line-clamp-2">
                         {article.title}
                       </h2>
                       <p className="text-muted-foreground mb-4 line-clamp-2">
                         {article.excerpt}
                       </p>
                       <div className="flex items-center justify-between">
                         <div className="flex items-center gap-2">
                           <Image
                             src={article.author.avatar}
                             alt={article.author.name}
                             width={32}
                             height={32}
                             className="rounded-full"
                           />
                           <span className="text-sm font-medium">
                             {article.author.name}
                           </span>
                         </div>
                         <div className="flex items-center gap-1 text-muted-foreground">
                           <BookOpen className="w-4 h-4" />
                           <span className="text-sm">
                             {article.readingTime}
                           </span>
                         </div>
                       </div>
                     </div>
                   </Card>
                 </Link>
               ))}
             </div>
             <Categories />
           </section>
         </div>
       </div>
     );
}

=== File: page.tsx ===
import { Card, CardContent } from "@/components/ui/card";
import { LucidePhoneCall, MailsIcon, MapIcon } from "lucide-react";
import Link from "next/link";
import { Metadata } from "next";

export const metadata: Metadata = {
  title: "Contact us",
};

const Icon = ({ color }: { color: string }) => (
  <svg
    width="175"
    height="175"
    viewBox="0 0 268 175"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M115.522 0C138.516 0 158.553 12.6601 169.044 31.3902C176.023 28.6279 183.631 27.1099 191.593 27.1099C221.261 27.1099 246.007 48.1863 251.675 76.1832C261.411 85.6326 267.461 98.8591 267.461 113.499C267.461 142.215 244.182 165.494 215.466 165.494C206.203 165.494 197.506 163.072 189.974 158.826C179.081 168.75 164.598 174.8 148.702 174.8C129.129 174.8 111.699 165.627 100.476 151.346C89.8531 160.181 76.1978 165.494 61.3016 165.494C27.4457 165.494 0 138.048 0 104.192C0 71.787 25.144 45.2544 56.9865 43.0401C64.758 18.1028 88.026 0 115.522 0Z"
      fill={color ? color : "#019247"}
    />
  </svg>
);

export default function Contact() {
  return (
    <div className="w-screen min-h-max flex items-center justify-center py-20">
      <div>
        <h2 className="font-semibold text-3xl text-center mb-20">Contact Us</h2>
        <Card className="grid grid-row-3 md:grid-cols-3 gap-4 md:gap-48 border-0 shadow-none">
          {/* Phone Number */}
          <CardContent className="flex flex-col items-center">
            <div className="relative">
              <Icon color="#E6F8EF" />
              <MailsIcon
                color="black"
                size={50}
                className="absolute left-[62.5px] top-[62.5px]"
              />
            </div>
            <Link
              href="mailto:hello@semra.com.ng"
              className="hover:text-semraGreen"
            >
              semra.suncity@gmail.com
            </Link>
            <Link
              href="https://www.semra.com.ng"
              className="hover:text-semraGreen"
            >
              www.semra.com.ng
            </Link>
          </CardContent>

          {/* Address */}
          <CardContent className="flex flex-col items-center text-center">
            <div className="relative">
              <Icon color="#FF98224D" />
              <MapIcon
                color="black"
                size={50}
                className="absolute left-[62.5px] top-[62.5px]"
              />
            </div>
            <Link
              href="https://maps.app.goo.gl/wYpZTfN2cwf5JVkP6"
              className="hover:text-semraGreen"
            >
              No. 2, Niger Crescent, off Main street, Suncity Estate, Abuja
            </Link>
          </CardContent>

          {/* Phone */}
          <CardContent className="flex flex-col items-center">
            <div className="relative">
              <Icon color="#0192474D" />
              <LucidePhoneCall
                color="black"
                size={50}
                className="absolute left-[62.5px] top-[62.5px]"
              />
            </div>
            <Link href="tel:+2348078785032" className="hover:text-semraGreen">
              +234-807-878-5032
            </Link>
            <Link href="tel:+2348078785032" className="hover:text-semraGreen">
              +234-807-878-5032
            </Link>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}


=== File: backButton.tsx ===
"use client"
import { useRouter } from "next/navigation";
import { ArrowLeft } from "lucide-react";

export const BackButton = () => {
const router = useRouter();
return (
  <ArrowLeft
    className="h-5 w-5 mb-6 md:mb-0 cursor-pointer hover:scale-150 transition duration-300"
    onClick={() => router.push("/events")}
  />
);
}

=== File: page.tsx ===
import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
} from "@/components/ui/carousel";
import { Card, CardContent } from "@/components/ui/card";

import Autoplay from "embla-carousel-autoplay";

import { events } from "@/utils/events";
import Image from "next/image";
import Link from "next/link";
import { Metadata } from "next";
import { BackButton } from "./backButton";

export const metadata: Metadata = {
  title: "Event Detail:",
};

const images = [
  "https://uxat7lu2fpipwkob.public.blob.vercel-storage.com/Eid-adha-2024/WhatsApp%20Image%202024-06-22%20at%2021.36.43-G1rLwwIi1SnTb3mDpay998wEebCofj.jpeg",
  "https://uxat7lu2fpipwkob.public.blob.vercel-storage.com/Eid-adha-2024/WhatsApp%20Image%202024-06-22%20at%2021.36.44-8uctoEg1aGY4ALjDxgjmAS29zVXRXP.jpeg",
  "https://uxat7lu2fpipwkob.public.blob.vercel-storage.com/Eid-adha-2024/eidadha2024-6Zgk0HfTqUbWbRm3NpfejW0NF1ZWPg.jpeg",
];

export default function EventDetail({ params }: { params: { id: string } }) {
     
  const event = events.filter((event) => event.id == params.id)[0];
  if (!event) {
    return (
      <div className="h-lvh flex items-center justify-center text-3xl font-semibold">
        Oops, Event not found
      </div>
    );
  }
  return (
    <div className="flex flex-col gap-6 relative justify-center items-center pt-20 px-[15%]">
      <div className="flex flex-col md:flex-row justify-start  md:justify-between items-start md:items-center w-full mb-6 md:mb-12">
        <BackButton />
        <h3 className="text-xl font-semibold">{event.title}</h3>
        <div></div>
      </div>

      <Carousel className="w-full h-96 rounded-md" opts={{ loop: true }}>
        <CarouselContent>
          {images.map((image, index) => (
            <CarouselItem key={index}>
              <Card>
                <CardContent className="w-full h-96 relative rounded-md">
                  <Image
                    src={image}
                    className="object-cover w-full h-full rounded-md"
                    alt={"Image " + index}
                    fill
                  />
                </CardContent>
              </Card>
            </CarouselItem>
          ))}
        </CarouselContent>
        <CarouselPrevious />
        <CarouselNext />
      </Carousel>

      <p className="text-semraGreen text-sm">Posted on {event.publishedAt}</p>

      <p className="font-light">{event.description}</p>
    </div>
  );
}


=== File: page.tsx ===
import { Card } from "@/components/ui/card";
import { events } from "@/utils/events";
import Image from "next/image";
import Link from "next/link";
import { Metadata } from "next";

export const metadata: Metadata = {
  title: "Latest Events from the community",
};

export default function Events() {
  return (
    <>
      <h2 className="font-semibold text-3xl text-center mb-20 px-12 md:px-0 pt-20">
        Latest events from the community
      </h2>
      <section className="w-screen md:overflow-hidden h-max md:h-screen px-[7.5%] grid grid cols-1 md:grid-cols-2 gap-12">
        <div className="hidden md:block ">
          <Card className="border-0 shadow-none flex flex-col gap-2">
            <Image
              src={events[0].image}
              alt={events[0].title}
              width={500}
              height={500}
              className="object-contain rounded-lg"
            />
            <p className="text-semraGreen">{events[0].publishedAt}</p>
            <h3 className="text-xl font-semibold">{events[0].title}</h3>
            <p className="font-light">{events[0].description.slice(0, 300)}</p>
            <Link href={`/events/${events[0].id}`} className="underline">
              Read more
            </Link>
          </Card>
        </div>
        <div className="md:overflow-auto flex flex-col gap-12">
          {events.map((event,i) => (
            <Card key={i} className="flex flex-col md:flex-row gap-4 border-0 shadow-none">
              <div className="w-4/6 md:w-[200px] h-[200px] md:h-[150px] relative">
                <Image
                  src={event.image}
                  alt={event.title}
                  fill
                  className="object-cover rounded-md"
                />
              </div>
              <div className="flex flex-col gap-2">
                <p className="text-semraGreen">{event.publishedAt}</p>
                <h3 className="text-base font-semibold">{event.title}</h3>
                <p className="font-light text-sm">
                  {event.description.slice(0, 100)}
                </p>
                <Link
                  href={`/events/${event.id}`}
                  className="underline text-sm"
                >
                  Read more
                </Link>
              </div>
            </Card>
          ))}
        </div>
      </section>
    </>
  );
}


=== File: globals.css ===
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: white;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  --radius: 20px;
  --accent-foreground: '#E6F8EF',
}

/* @media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
} */

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}
